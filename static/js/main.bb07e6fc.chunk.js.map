{"version":3,"sources":["components/HeaderComponent.js","components/HTMLCoderComponent.js","components/CSSCoderComponent.js","components/JSCoderComponent.js","components/OutputComponent.js","components/CoderComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","isOpen","toggleNav","bind","this","setState","Navbar","className","color","light","expand","NavbarBrand","href","Component","HTMLCoder","htmlCode","handleTab","submitHTML","multilineTextarea","document","getElementById","style","height","currentText","value","updateHTML","e","htmlText","window","event","key","preventDefault","end","selectionEnd","substring","selectionStart","length","focus","Form","Row","padding","Input","resize","overflow","type","id","readOnly","spellCheck","width","onChange","onBlur","onKeyDown","CSSCoder","CSSCode","submitCSS","cleanCSSCode","updateCSS","code","replaceAll","cssText","onFocus","JSCoder","JSCode","submitJS","updateJS","jsText","Output","changeColour","body","updateAllCodes","prev","output","html","cssCode","jsCode","innerHTML","placeholder","console","log","marginTop","border","Coder","activeTab","setActiveTab","updateHTMLCode","updateCSSCode","updateJSCode","tab","newCode","Col","sm","Nav","tabs","NavItem","NavLink","onClick","TabContent","TabPane","tabId","App","basename","process","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bb07e6fc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport '../CSS/coder.css';\n\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n    }\n\n\n    toggleNav() {\n        \n        this.setState({\n            isOpen : !this.state.isOpen\n        });\n        \n        //this.state.isOpen = !this.state.isOpen;\n    }\n\n    render() {\n        return (\n            <Navbar className=\"navbar-fixed-top\" color=\"dark\" light expand=\"md\">\n                <NavbarBrand className=\"container text-white\" href=\"/\">Online HTML & CSS IDE</NavbarBrand>\n            </Navbar>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { Row, Form, Input } from 'reactstrap';\n\n\nclass HTMLCoder extends Component {\n\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            htmlCode : null\n        }\n\n\n        this.handleTab = this.handleTab.bind(this);\n        this.submitHTML = this.submitHTML.bind(this);\n    }\n\n    componentDidMount() {\n        var multilineTextarea = document.getElementById(\"pre-html-text\");\n        if (multilineTextarea) {\n            multilineTextarea.style.height = '200px';\n        }\n    }\n\n    submitHTML() {\n        var currentText = document.getElementById(\"html-text\").value;\n        this.setState({\n            htmlCode : currentText\n        }, () => {\n            this.props.updateHTML(this.state.htmlCode);\n        });\n        //this.props.updateHTML(this.state.htmlCode);\n    \n    }\n\n\n    handleTab(e) {\n        var htmlText = document.getElementById(\"html-text\");\n        e = e || window.event;\n        if (e.key === \"Tab\") {\n            e.preventDefault();\n            var end = htmlText.selectionEnd;\n            var currentText = htmlText.value;\n            htmlText.value = currentText.substring(0, htmlText.selectionStart) + \"\\t\" + currentText.substring(htmlText.selectionStart, currentText.length);\n            htmlText.focus();\n            htmlText.selectionEnd = end + 1;\n        }\n    }\n\n    render() {\n\n        var htmlPreText = \"<html>\\n\\\n        <head>\\n\\\n            <title> Index </title>\\n\\\n            <link rel='stylesheet' href='index.css'>\\n\\\n            <script src='index.js'></script>\\n\\\n        </head>\\n\\\n        <body>\\n\";\n\n        var htmlPostText = \"\\\n        </body>\\n</html>\\n\";\n\n        return (\n            <Form>\n\n                <Row>\n                    <div style={{ padding: \"30px 10px 5px 30px\" }} className=\"container\">\n                        <Input style={{ color: \"gray\", resize: \"none\", overflow: \"hidden\" }} type=\"textarea\" id=\"pre-html-text\" readOnly value={htmlPreText}>\n\n                        </Input>\n                    </div>\n                </Row>\n\n                <Row>\n                    <div style={{ padding: \"5px 10px 5px 30px\" }} className=\"container\">\n                        <textarea spellCheck={false} id=\"html-text\" style={{ padding: \"10px 10px 10px 50px\", height: \"250px\", width: \"100%\" }} onChange={this.submitHTML} onBlur={this.submitHTML} onKeyDown={this.handleTab}>\n\n                        </textarea>\n                    </div>\n                    \n                </Row>\n                <Row>\n                    <div style={{ padding: \"5px 10px 5px 30px\" }} className=\"container\">\n                        <Input style={{ color: \"gray\", resize: \"none\", overflow: \"hidden\" }} type=\"textarea\" id=\"post-html-text\" readOnly value={htmlPostText}>\n\n                        </Input>\n                    </div>\n                </Row>\n\n\n\n            </Form>\n\n        );\n    }\n}\n\nexport default HTMLCoder;","import React, { Component } from 'react';\nimport { Row, Form } from 'reactstrap';\n\n\nclass CSSCoder extends Component {\n\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            CSSCode: null\n        }\n\n        this.submitCSS = this.submitCSS.bind(this);\n        this.handleTab = this.handleTab.bind(this);\n    }\n\n\n    submitCSS() {\n        var currentText = document.getElementById(\"css-text\").value;\n        //console.log(\"Got css code: \" + currentText);\n        currentText = this.cleanCSSCode(currentText);\n        this.setState({\n            CSSCode : currentText\n        }, () => {\n            this.props.updateCSS(this.state.CSSCode);\n        });\n        \n    }\n\n    cleanCSSCode(code) {\n        code = code.replaceAll(/body/gi, \"#output\");\n        code = code.replaceAll(/html/gi, \"#output\");\n        code = code.replaceAll(\"\\\"\", \"\");\n\n        var pat = /\\.([a-zA-Z]+,*\\s*)+\\n*\\r*{/g;\n        code = code.replaceAll(pat, \"#output \" +  \"$&\");\n        code = code.replaceAll(/([a-zA-Z]+,*\\s*)+\\n*\\r*{/g, \"#output \" + \"$&\");\n        return code;\n    }\n\n\n\n    handleTab(e) {\n        var cssText = document.getElementById(\"css-text\");\n        if (e.key === \"Tab\") {\n            e = e || window.event;\n            e.preventDefault();\n\n            var end = cssText.selectionEnd;\n            var currentText = cssText.value;\n            cssText.value = currentText.substring(0, cssText.selectionStart) + \"\\t\" + currentText.substring(cssText.selectionStart, currentText.length);\n            cssText.focus();\n            cssText.selectionEnd = end + 1;\n        }\n    }\n\n    render() {\n\n\n\n        return (\n            <Form>\n\n                <Row>\n                    <div style={{ padding: \"40px 30px 5px 30px\" }} className=\"container\">\n                        <textarea spellCheck={false} id=\"css-text\" style={{ padding: \"10px 10px 10px 10px\", height: \"500px\", width: \"100%\" }} onFocus={this.submitCSS} onBlur={this.submitCSS} onChange={this.submitCSS} onKeyDown={this.handleTab}>\n\n                        </textarea>\n                    </div>\n                </Row>\n\n            </Form>\n\n        );\n    }\n}\n\nexport default CSSCoder;","import React, { Component } from 'react';\nimport { Row, Form } from 'reactstrap';\n\n\nclass JSCoder extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            JSCode: null\n        }\n\n        this.submitJS = this.submitJS.bind(this);\n        this.handleTab = this.handleTab.bind(this);\n    }\n\n\n    submitJS() {\n        var currentText = document.getElementById(\"js-text\").value;\n        this.setState({\n            JSCode : currentText\n        }, () => {\n            this.props.updateJS(this.state.JSCode);\n        });\n        \n    }\n\n\n\n\n\n    handleTab(e) {\n        var jsText = document.getElementById(\"js-text\");\n        if (e.key === \"Tab\") {\n            e = e || window.event;\n            e.preventDefault();\n\n            var end = jsText.selectionEnd;\n            var currentText = jsText.value;\n            jsText.value = currentText.substring(0, jsText.selectionStart) + \"\\t\" + currentText.substring(jsText.selectionStart, currentText.length);\n            jsText.focus();\n            jsText.selectionEnd = end + 1;\n        }\n    }\n\n    render() {\n\n\n\n        return (\n            <Form>\n\n                <Row>\n                    <div style={{ padding: \"40px 30px 5px 30px\" }} className=\"container\">\n                        <textarea id=\"js-text\" style={{ padding: \"10px 10px 10px 10px\", height: \"500px\", width: \"100%\" }} onChange={this.submitJS} onKeyDown={this.handleTab}>\n\n                        </textarea>\n                    </div>\n                </Row>\n\n            </Form>\n\n        );\n    }\n}\n\nexport default JSCoder;","import React, { Component } from 'react';\nimport { Row } from 'reactstrap';\n\nclass Output extends Component {\n    constructor(props) {\n        super(props);\n\n        this.updateAllCodes = this.updateAllCodes.bind(this);\n        //this.updateAllCodes();\n\n    }\n\n    componentDidUpdate(prev) {\n        this.updateAllCodes();\n    }\n\n    updateAllCodes() {\n        var output = document.getElementById(\"output\");\n\n        var style = \"\";\n        var html = \"\";\n\n        if (this.props.htmlCode)\n            html = this.props.htmlCode;\n\n        //console.log(\"CSS = \" + this.props.cssCode);\n        if (this.props.cssCode)\n            style = \"<style>\" + this.props.cssCode + \"</style>\";\n\n        if (this.props.jsCode)\n            document.getElementById(\"scripter\").innerHTML = this.props.jsCode;\n\n        if (output != null)\n            output.innerHTML = style + \"\\n\" + html;\n\n        this.placeholder();\n    }\n\n\n\tchangeColour = () => {\n\t\tdocument.body.style.color = \"red\";\n\t}\n\t\n\n\n    placeholder() {\n        console.log(\"HTML: \" + this.props.htmlCode + \"\\nCSS: \" + this.props.cssCode);\n        console.log(this.props.htmlCode.length + \" \" + this.props.cssCode.length);\n        if ((!this.props.htmlCode || this.props.htmlCode.length === 0) && (!this.props.cssCode || this.props.cssCode.length === 0)) {\n            var output = document.getElementById(\"output\");\n            if (output) {\n                output.innerHTML = \"Your output comes here...\";\n                output.style.color = \"GrayText\";\n            }\n        }\n        else {\n            document.getElementById(\"output\").style.color = \"black\";\n        }\n\n    }\n\n\n\n\n    render() {\n        return (\n            \n            <Row>\n                <script id=\"scripter\">\n\n                </script>\n                <div id=\"output\" style={{ marginTop: \"40px\", padding: \"5px 30px 5px 10px\", height: \"500px\", width: \"80%\", border: \"1px solid black\", color: 'GrayText' }} className=\"container\">\n                \n                </div>\n            </Row>\n        );\n    }\n}\n\nexport default Output;","import React, { Component } from 'react';\nimport HTMLCoder from '../components/HTMLCoderComponent';\nimport CSSCoder from '../components/CSSCoderComponent';\nimport JSCoder from '../components/JSCoderComponent';\nimport Output from '../components/OutputComponent';\nimport { TabContent, TabPane, Nav, Row, Col, NavItem, NavLink } from 'reactstrap';\nimport '../CSS/coder.css';\n\nclass Coder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTab : \"1\",\n            htmlCode : \"\",\n            cssCode : \"\",\n            jsCode : \"\",\n        };\n\n        this.setActiveTab = this.setActiveTab.bind(this);\n        this.updateHTMLCode = this.updateHTMLCode.bind(this);\n        this.updateCSSCode = this.updateCSSCode.bind(this);\n        this.updateJSCode = this.updateJSCode.bind(this);\n    }\n\n    setActiveTab(tab) {\n        this.setState({\n            activeTab : tab\n        });\n    }\n\n    updateHTMLCode(newCode) {\n        //console.log(\"Updating html to \" + newCode);\n        this.setState({\n            htmlCode : newCode\n        });\n    }\n\n    updateCSSCode(newCode) {\n        this.setState({\n            cssCode : newCode\n        });\n    }\n\n    updateJSCode(newCode) {\n        this.setState({\n            jsCode : newCode\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col sm={1} style={{height: \"100%\"}}>\n                        <Nav className=\"flex-column\" tabs>\n                            <NavItem className={this.state.activeTab === \"1\"? \"selectedTab\" : \"normalTab\"} >\n                                <NavLink className=\"text-white\" onClick= {()=>this.setActiveTab(\"1\")}>index.html</NavLink>\n                            </NavItem>\n                            <NavItem className={this.state.activeTab === \"2\"? \"selectedTab\" : \"normalTab\"}>\n                                <NavLink className=\"text-white\" onClick= {()=>this.setActiveTab(\"2\")}>index.css</NavLink>\n                            </NavItem>\n                            \n                            <NavItem className={this.state.activeTab === \"3\"? \"selectedTab\" : \"normalTab\"}>\n                                <NavLink className=\"text-white\" onClick= {()=>this.setActiveTab(\"3\")}>index.js</NavLink>\n                            </NavItem>\n                            \n                        </Nav>\n                    </Col>\n                    <Col sm={6}>\n                        <TabContent activeTab={this.state.activeTab}>\n                            <TabPane tabId=\"1\">\n                                <HTMLCoder updateHTML={this.updateHTMLCode} />\n                            </TabPane>\n                            <TabPane tabId=\"2\">\n                                <CSSCoder  updateCSS = {this.updateCSSCode} />\n                            </TabPane>\n                            \n                            <TabPane tabId=\"3\">\n                                <JSCoder updateJS = {this.updateJSCode} />\n                            </TabPane>\n                            \n                            \n                        </TabContent>\n                    </Col>\n                    <Col sm={5}>\n                        <Output htmlCode={this.state.htmlCode} cssCode={this.state.cssCode} jsCode={this.state.jsCode} />\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Coder;","import React from 'react';\nimport Header from './components/HeaderComponent';\nimport Coder from './components/CoderComponent';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"app\">\n        <Header />\n        <Route path=\"/\">\n            <Coder />\n        </Route>\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}